#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_EXT_nonuniform_qualifier : enable

layout( local_size_x = 8, local_size_y = 8, local_size_z = 1 ) in;

layout(set = 0, binding = 0) uniform sampler2D texSampler[];

layout(set = 1, binding = 0) uniform sampler2D depth;
layout(set = 1, binding = 1) uniform sampler2D tangentFrame;
layout(set = 1, binding = 2) uniform sampler2D UVandDepthGradient;
layout(set = 1, binding = 3) uniform sampler2D UVGradient;
layout(set = 1, binding = 4) uniform usampler2D materialID;

layout(set = 2, binding = 0) uniform writeonly image2D outColor;

void main()
{
	const ivec2 pixelPos = ivec2(gl_GlobalInvocationID.xy);
	vec2 texCoord = texelFetch(UVandDepthGradient, pixelPos, 0).xy * 2.0000f;
	uint packedMaterialID = texelFetch(materialID, pixelPos, 0).x;
	uint materialID = packedMaterialID & 0x7F;

	if(materialID == 0)
	{
		imageStore(outColor, pixelPos, vec4(0.0f, 0.0f, 0.0f, 1.0f));
	}
	else
	{
		imageStore(outColor, pixelPos, texture(texSampler[materialID], texCoord));
	}
	
}